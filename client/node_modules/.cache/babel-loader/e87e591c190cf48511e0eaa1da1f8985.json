{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilal\\\\Documents\\\\food-delivery-app\\\\client\\\\src\\\\pages\\\\myOrder\\\\MyOrders.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/Navbar';\nimport \"./myorder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyOrders() {\n  _s();\n\n  const [myOrders, setMyOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const statusToString = nb => {\n    if (nb === 0) {\n      return \"Waiting confirmation\";\n    } else if (nb === 1) {\n      return \"Cooking\";\n    } else if (nb === 2) {\n      return \"On the way\";\n    } else {\n      return \"Delivered\";\n    }\n  };\n\n  const showHideFood = () => {\n    this.classList.toggle(\"show-hide\");\n  };\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"userId\");\n\n    const getOrder = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}order/` + id,\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        setMyOrders(res.data.data);\n        setTimeout(() => setLoading(true), 300);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getOrder();\n  }, []);\n\n  if (loading === false) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), myOrders.map(order => {\n          if (order.status !== 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status : \", statusToString(order.status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 136\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 32\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"old-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Old\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), myOrders.map(order => {\n          if (order.status === 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status : \", statusToString(order.status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Adress : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 136\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 32\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MyOrders, \"qytDGlQWNzHObHCpRGzcT261bXY=\");\n\n_c = MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"sources":["C:/Users/bilal/Documents/food-delivery-app/client/src/pages/myOrder/MyOrders.js"],"names":["axios","React","useEffect","useState","Navbar","MyOrders","myOrders","setMyOrders","loading","setLoading","statusToString","nb","showHideFood","classList","toggle","id","localStorage","getItem","getOrder","method","url","process","env","REACT_APP_API_URL","withCredentials","headers","then","res","console","log","data","setTimeout","catch","err","map","order","status","address","orderItems","item","PUBLIC_URL","name","total"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport \"./myorder.css\"\r\nexport default function MyOrders() {\r\n    const [myOrders, setMyOrders] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const statusToString = (nb) => {\r\n        if(nb===0){\r\n            return \"Waiting confirmation\"\r\n        }\r\n        else if(nb===1){\r\n            return \"Cooking\"\r\n        }else if (nb===2){\r\n            return \"On the way\"\r\n        } else {\r\n            return \"Delivered\"\r\n        }\r\n    }\r\n\r\n    const showHideFood = () => {\r\n        this.classList.toggle(\"show-hide\")\r\n    }\r\n\r\n    useEffect(()=> {\r\n        const id = localStorage.getItem(\"userId\")\r\n        const getOrder = async()=> {\r\n\r\n            await axios({\r\n                method:\"get\",\r\n                url:`${process.env.REACT_APP_API_URL}order/`+ id ,\r\n                withCredentials: true, \r\n                headers: {\r\n                    'Access-Control-Allow-Credentials': true,\r\n            \r\n            \r\n                  }\r\n                \r\n            })\r\n            .then((res) => {\r\n                \r\n                \r\n                console.log(res.data.data)\r\n                setMyOrders(res.data.data)\r\n                setTimeout(() => setLoading(true),300)\r\n                \r\n            })\r\n            \r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n      getOrder()\r\n    },[])\r\n\r\n    if(loading === false) {\r\n        return <h1>LOADING</h1>\r\n    }\r\n\r\n  return (\r\n      \r\n      <div className='container'>\r\n          <Navbar />\r\n    <div className='orders-container'>\r\n        <div className=\"current-orders orders\">\r\n            <h1>  <span className='span-color'>Current</span> Orders</h1>\r\n        {myOrders.map((order)=> {\r\n            if(order.status !==3){\r\n                return <div className='single-order'>\r\n                    <p>Status : {statusToString(order.status)}</p>\r\n                    <p>Address : {order.address}</p>\r\n                    <button className='show-food'>Show/hide food</button>\r\n                    <ul className='food-list'>\r\n                    \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        })}\r\n        </div>\r\n        <div className=\"old-orders orders\">\r\n        <h1><span className='span-color'>Old</span> Orders</h1>\r\n        {myOrders.map((order)=> {\r\n            if(order.status ===3){\r\n                return <div className='single-order'>\r\n                    <p>Status : {statusToString(order.status)}</p>\r\n                    <p>Adress : {order.address}</p>\r\n                    <button  className='show-food'>Show/hide food</button>\r\n                    <ul className='food-list'>\r\n                        \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        })}\r\n        </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}