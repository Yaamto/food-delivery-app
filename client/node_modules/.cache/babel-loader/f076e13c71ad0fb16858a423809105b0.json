{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilal\\\\Documents\\\\food-delivery-app\\\\client\\\\src\\\\pages\\\\myOrder\\\\MyOrders.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/Navbar';\nimport LoadingSpinner from '../../components/spinner/Spinner';\nimport \"./myorder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyOrders() {\n  _s();\n\n  const [myOrders, setMyOrders] = useState([]);\n  const [loading, setLoading] = useState(false); //Si il y a une commande avec lequelle le status est différent de 3 alors \n  // on ne peut pas commander et retourne \"vous avez déjà une commande en cours\"\n\n  const statusToString = nb => {\n    if (nb === 0) {\n      return \"Waiting confirmation\";\n    } else if (nb === 1) {\n      return \"Cooking\";\n    } else if (nb === 2) {\n      return \"On the way\";\n    } else {\n      return \"Delivered\";\n    }\n  };\n\n  const showHideFood = (e, id) => {\n    e.preventDefault();\n    document.getElementById(id).classList.toggle(\"show-hide\");\n  };\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"userId\");\n\n    const getOrder = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}order/` + id,\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        setMyOrders(res.data.data);\n        setTimeout(() => setLoading(true), 500);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getOrder();\n  }, []);\n\n  if (loading === false) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), myOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vous n'avez pas de commande en cours \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this) : myOrders.map(order => {\n          if (order.status !== 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-order-current\",\n                children: [\"Status : \", statusToString(order.status), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                onClick: e => showHideFood(e, order._id),\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                id: order._id,\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 136\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"$\", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 161\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"total-order-price\",\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 62\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"old-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Old\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), myOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vous n'avez pas de commande en cours \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 36\n        }, this) : myOrders.map(order => {\n          if (order.status === 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-order-old\",\n                children: [\"Status : \", statusToString(order.status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                onClick: e => showHideFood(e, order._id),\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                id: order._id,\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 136\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"$\", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 161\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"total-order-price\",\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 62\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MyOrders, \"qytDGlQWNzHObHCpRGzcT261bXY=\");\n\n_c = MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"sources":["C:/Users/bilal/Documents/food-delivery-app/client/src/pages/myOrder/MyOrders.js"],"names":["axios","React","useEffect","useState","Navbar","LoadingSpinner","MyOrders","myOrders","setMyOrders","loading","setLoading","statusToString","nb","showHideFood","e","id","preventDefault","document","getElementById","classList","toggle","localStorage","getItem","getOrder","method","url","process","env","REACT_APP_API_URL","withCredentials","headers","then","res","console","log","data","setTimeout","catch","err","length","map","order","status","address","_id","orderItems","item","PUBLIC_URL","name","price","total"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport LoadingSpinner from '../../components/spinner/Spinner'\r\n\r\nimport \"./myorder.css\"\r\nexport default function MyOrders() {\r\n    const [myOrders, setMyOrders] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    //Si il y a une commande avec lequelle le status est différent de 3 alors \r\n    // on ne peut pas commander et retourne \"vous avez déjà une commande en cours\"\r\n\r\n    const statusToString = (nb) => {\r\n        if(nb===0){\r\n            return \"Waiting confirmation\"\r\n        }\r\n        else if(nb===1){\r\n            return \"Cooking\"\r\n        }else if (nb===2){\r\n            return \"On the way\"\r\n        } else {\r\n            return \"Delivered\"\r\n        }\r\n    }\r\n\r\n    const showHideFood = (e, id) => {\r\n        e.preventDefault()\r\n        document.getElementById(id).classList.toggle(\"show-hide\")\r\n    }\r\n\r\n    useEffect(()=> {\r\n        const id = localStorage.getItem(\"userId\")\r\n        const getOrder = async()=> {\r\n\r\n            await axios({\r\n                method:\"get\",\r\n                url:`${process.env.REACT_APP_API_URL}order/`+ id ,\r\n                withCredentials: true, \r\n                headers: {\r\n                    'Access-Control-Allow-Credentials': true,\r\n                  }         \r\n            })\r\n            .then((res) => {             \r\n                console.log(res.data.data)\r\n                setMyOrders(res.data.data)\r\n                setTimeout(() => setLoading(true),500)       \r\n            })\r\n            \r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n      getOrder()\r\n    },[])\r\n\r\n    if(loading === false) {\r\n        return <LoadingSpinner />\r\n    }\r\n  return (\r\n      \r\n      <div className='container'>\r\n          <Navbar />\r\n    <div className='orders-container'>\r\n        <div className=\"current-orders orders\">\r\n            <h1>  <span className='span-color'>Current</span> Orders</h1>\r\n            {myOrders.length === 0 ?  (<p>Vous n'avez pas de commande en cours </p>) : ( myOrders.map((order)=> {\r\n            if(order.status !==3){\r\n                return <div className='single-order'>\r\n                    <p className='status-order-current'>Status : {statusToString(order.status)}...</p>\r\n                    <p>Address : {order.address}</p>\r\n                    <button className='show-food'  onClick={(e) => showHideFood(e, order._id)}>Show/hide food</button>\r\n                    <ul className='food-list' id={order._id}>\r\n                    \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span> <span>${item.price}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p className='total-order-price'>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        })) }\r\n      \r\n        </div>\r\n        <div className=\"old-orders orders\">\r\n        <h1><span className='span-color'>Old</span> Orders</h1>\r\n        {myOrders.length === 0 ?  (<p>Vous n'avez pas de commande en cours </p>) : (  myOrders.map((order)=> {\r\n            if(order.status ===3){\r\n                return <div className='single-order'>\r\n                    <p className='status-order-old'>Status : {statusToString(order.status)}</p>\r\n                    <p>Address : {order.address}</p>\r\n                    <button  className='show-food' onClick={(e) => showHideFood(e, order._id)}>Show/hide food</button>\r\n                    <ul className='food-list' id={order._id}>\r\n                        \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span> <span>${item.price}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p className='total-order-price'>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        }))}\r\n      \r\n        </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}