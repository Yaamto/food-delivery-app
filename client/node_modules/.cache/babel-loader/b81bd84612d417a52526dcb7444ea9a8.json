{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilal\\\\Documents\\\\food-delivery-app\\\\client\\\\src\\\\pages\\\\admin\\\\orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport SideBar from '../../../components/sidebar/SideBar';\nimport LoadingSpinner from '../../../components/spinner/Spinner';\nimport \"./orders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Orders() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [allOrders, setAllOrders] = useState([]);\n\n  const showHideFood = (e, id) => {\n    e.preventDefault();\n    document.getElementById(id).classList.toggle(\"show-hide\");\n  };\n\n  const statusToString = nb => {\n    if (nb === 0) {\n      return \"Waiting confirmation\";\n    } else if (nb === 1) {\n      return \"Cooking\";\n    } else if (nb === 2) {\n      return \"On the way\";\n    } else {\n      return \"Delivered\";\n    }\n  };\n\n  useEffect(() => {\n    const getOrder = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}order/allorder`,\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(res => {\n        console.log(res);\n        setTimeout(() => setLoading(true), 300);\n        setAllOrders(res.data.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getOrder();\n  }, []);\n\n  if (loading === false) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-order\",\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 43\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), allOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have any current order \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }, this) : allOrders.map(order => {\n          const date = new Date(order.createdAt);\n\n          if (order.status !== 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-order-current\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status\",\n                  children: \"Status :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 57\n                }, this), \" \", statusToString(order.status), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date-order\",\n                children: date.toLocaleDateString(\"fr\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                onClick: e => showHideFood(e, order._id),\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                id: order._id,\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 136\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"$\", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 161\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"total-order-price\",\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 62\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"old-orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-order\",\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Old\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 39\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), allOrders.map(order => {\n          const date = new Date(order.createdAt);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-order\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date-order\",\n                children: date.toLocaleDateString(\"fr\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total : $\", order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                onClick: e => showHideFood(e, order._id),\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: statusToString(order.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Next step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                id: order._id,\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 36\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 132\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"$\", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 157\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Orders, \"3OFKG4PXNO3nnxPZHNDNS1aiUjI=\");\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/bilal/Documents/food-delivery-app/client/src/pages/admin/orders/Orders.js"],"names":["axios","React","useEffect","useState","SideBar","LoadingSpinner","Orders","loading","setLoading","allOrders","setAllOrders","showHideFood","e","id","preventDefault","document","getElementById","classList","toggle","statusToString","nb","getOrder","method","url","process","env","REACT_APP_API_URL","withCredentials","headers","then","res","console","log","setTimeout","data","catch","err","length","map","order","date","Date","createdAt","status","toLocaleDateString","address","_id","orderItems","item","PUBLIC_URL","name","price","total"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, {useEffect, useState} from 'react'\r\nimport SideBar from '../../../components/sidebar/SideBar'\r\nimport LoadingSpinner from '../../../components/spinner/Spinner'\r\nimport \"./orders.css\"\r\nexport default function Orders() {\r\n  const [loading, setLoading] = useState(false)\r\n  const [allOrders, setAllOrders] = useState([])\r\n\r\n  const showHideFood = (e, id) => {\r\n    e.preventDefault()\r\n    document.getElementById(id).classList.toggle(\"show-hide\")\r\n}\r\n\r\n  const statusToString = (nb) => {\r\n    if (nb === 0) {\r\n      return \"Waiting confirmation\"\r\n    }\r\n    else if (nb === 1) {\r\n      return \"Cooking\"\r\n    } else if (nb === 2) {\r\n      return \"On the way\"\r\n    } else {\r\n      return \"Delivered\"\r\n    }\r\n  }\r\n\r\n    useEffect(() => {\r\n      \r\n      const getOrder = async()=> {\r\n        await axios({\r\n            method:\"get\",\r\n            url:`${process.env.REACT_APP_API_URL}order/allorder` ,\r\n            withCredentials: true, \r\n            headers: {\r\n                'Access-Control-Allow-Credentials': true,\r\n              }         \r\n        })\r\n        .then((res) => {             \r\n            \r\n          console.log(res)\r\n\r\n            setTimeout(() => setLoading(true),300)    \r\n            setAllOrders(res.data.data)   \r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n  getOrder()\r\n    \r\n      \r\n    }, [])\r\n    \r\n\r\n    if(loading === false) {\r\n      return <LoadingSpinner />\r\n  }\r\n  return (\r\n    <div>\r\n        <SideBar />\r\n        <div className=\"orders-container container\">\r\n\r\n        \r\n        \r\n        <div className=\"current-orders orders\">\r\n            <h1 className='title-order'>  <span className='span-color'>Current</span> Orders</h1>\r\n            {allOrders.length === 0 ?  (<p>You don't have any current order </p>) : ( allOrders.map((order)=> {\r\n                const date = new Date(order.createdAt)\r\n            if(order.status !==3){\r\n                return <div className='single-order'>\r\n                    <p className='status-order-current'><span className='status'>Status :</span> {statusToString(order.status)}...</p>\r\n                    <p className='date-order'>{date.toLocaleDateString(\"fr\")}</p>\r\n                    <p>Address : {order.address}</p>\r\n                    <button className='show-food'  onClick={(e) => showHideFood(e, order._id)}>Show/hide food</button>\r\n                    <ul className='food-list' id={order._id}>\r\n                    \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span> <span>${item.price}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p className='total-order-price'>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        })) }\r\n        </div>\r\n        <div className=\"old-orders\">\r\n          \r\n        <h1 className='title-order'>  <span className='span-color'>Old</span> Orders</h1>\r\n          {allOrders.map((order) => {\r\n            const date = new Date(order.createdAt)\r\n            return <div className=\"single-order\">\r\n                  <div className=\"order-header\">\r\n                      <p className='date-order'>{date.toLocaleDateString(\"fr\")}</p>\r\n                      <p>{order._id}</p>\r\n                  </div>\r\n                  <div className=\"order-body\">\r\n                    <p>Total : ${order.total}</p>\r\n                    <button className='show-food'  onClick={(e) => showHideFood(e, order._id)}>Show/hide food</button>\r\n                   \r\n                    <p>{statusToString(order.status)}</p>\r\n                    <button>Next step</button>\r\n                  </div>\r\n                  <div className=\"order-footer\">\r\n                  <ul className='food-list' id={order._id}>\r\n                    \r\n                    {order.orderItems.map((item)=> {\r\n                       return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span> <span>${item.price}</span></li>\r\n                    })}\r\n                </ul>\r\n                  </div>\r\n            </div>\r\n          })}\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}