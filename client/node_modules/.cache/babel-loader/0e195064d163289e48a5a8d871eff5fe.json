{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilal\\\\Documents\\\\food-delivery-app\\\\client\\\\src\\\\pages\\\\admin\\\\orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport SideBar from '../../../components/sidebar/SideBar';\nimport LoadingSpinner from '../../../components/spinner/Spinner';\nimport \"./orders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Orders() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [allOrders, setAllOrders] = useState([]);\n  useEffect(() => {\n    const getOrder = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}order/allorder`,\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(res => {\n        console.log(res);\n        setTimeout(() => setLoading(true), 500); // setAllOrders()   \n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getOrder();\n  }, []);\n\n  if (loading === false) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Orders, \"3OFKG4PXNO3nnxPZHNDNS1aiUjI=\");\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/bilal/Documents/food-delivery-app/client/src/pages/admin/orders/Orders.js"],"names":["axios","React","useEffect","useState","SideBar","LoadingSpinner","Orders","loading","setLoading","allOrders","setAllOrders","getOrder","method","url","process","env","REACT_APP_API_URL","withCredentials","headers","then","res","console","log","setTimeout","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAO,cAAP;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEED,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMS,QAAQ,GAAG,YAAU;AACzB,YAAMX,KAAK,CAAC;AACRY,QAAAA,MAAM,EAAC,KADC;AAERC,QAAAA,GAAG,EAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAF7B;AAGRC,QAAAA,eAAe,EAAE,IAHT;AAIRC,QAAAA,OAAO,EAAE;AACL,8CAAoC;AAD/B;AAJD,OAAD,CAAL,CAQLC,IARK,CAQCC,GAAD,IAAS;AAEbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEEG,QAAAA,UAAU,CAAC,MAAMf,UAAU,CAAC,IAAD,CAAjB,EAAwB,GAAxB,CAAV,CAJW,CAKX;AACH,OAdK,EAeLgB,KAfK,CAeEC,GAAD,IAAS;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,OAjBK,CAAN;AAkBH,KAnBC;;AAoBJd,IAAAA,QAAQ;AAGL,GAzBQ,EAyBN,EAzBM,CAAT;;AA4BA,MAAGJ,OAAO,KAAK,KAAf,EAAsB;AACpB,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACE;AAAA,2BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCuBD,M;;KAAAA,M","sourcesContent":["import axios from 'axios'\r\nimport React, {useEffect, useState} from 'react'\r\nimport SideBar from '../../../components/sidebar/SideBar'\r\nimport LoadingSpinner from '../../../components/spinner/Spinner'\r\nimport \"./orders.css\"\r\nexport default function Orders() {\r\n  const [loading, setLoading] = useState(false)\r\n  const [allOrders, setAllOrders] = useState([])\r\n\r\n    useEffect(() => {\r\n      \r\n      const getOrder = async()=> {\r\n        await axios({\r\n            method:\"get\",\r\n            url:`${process.env.REACT_APP_API_URL}order/allorder` ,\r\n            withCredentials: true, \r\n            headers: {\r\n                'Access-Control-Allow-Credentials': true,\r\n              }         \r\n        })\r\n        .then((res) => {             \r\n            \r\n          console.log(res)\r\n\r\n            setTimeout(() => setLoading(true),500)    \r\n            // setAllOrders()   \r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n  getOrder()\r\n    \r\n      \r\n    }, [])\r\n    \r\n\r\n    if(loading === false) {\r\n      return <LoadingSpinner />\r\n  }\r\n  return (\r\n    <div>\r\n        <SideBar />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}