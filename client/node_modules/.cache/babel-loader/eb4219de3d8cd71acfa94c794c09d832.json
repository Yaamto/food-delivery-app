{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilal\\\\Documents\\\\food-delivery-app\\\\client\\\\src\\\\pages\\\\myOrder\\\\MyOrders.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState, useContext } from 'react';\nimport Navbar from '../../components/navbar/Navbar';\nimport LoadingSpinner from '../../components/spinner/Spinner';\nimport { Notyf } from 'notyf';\nimport 'notyf/notyf.min.css';\nimport { StatusContext } from '../../components/context/StatusContext';\nimport \"./myorder.css\";\nimport Status from '../../components/status/Status';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyOrders() {\n  _s();\n\n  const [myOrders, setMyOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const statusTab = [\"Waiting confirmation...\", \"cooking...\", \"On the way...\", \"Delivered\"];\n  const {\n    sock\n  } = useContext(StatusContext);\n  console.log(sock); //Permet de montrer/cacher les éléments de la commande (nourriture) lors du clique\n\n  const showHideFood = (e, id) => {\n    e.preventDefault();\n    document.getElementById(id).classList.toggle(\"show-hide\");\n  }; // pour status faire un composant a part avec des props\n  // faire un useeffect dans ce composant pour mettre à jour le status\n  // ou \n\n\n  useEffect(() => {\n    if (!sock) {\n      return;\n    }\n\n    sock.on(\"recieve-status\", state => {\n      setMyOrders(orders => orders.map(order => {\n        if (order._id === state._id) {\n          return state;\n        }\n\n        return order;\n      }));\n    });\n  }, [sock]);\n  useEffect(() => {\n    const id = localStorage.getItem(\"userId\");\n\n    const getOrder = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}order/` + id,\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Credentials': true\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        setMyOrders(res.data.data);\n        setTimeout(() => setLoading(true), 500);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getOrder();\n  }, []);\n\n  if (loading === false) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-order\",\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 43\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), myOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have any current order \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 40\n        }, this) : myOrders.map(order => {\n          const date = new Date(order.createdAt);\n\n          if (order.status !== 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-order-current\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status\",\n                  children: \"Status : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 57\n                }, this), \" \", statusTab[order.status]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date-order\",\n                children: date.toLocaleDateString(\"fr\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                onClick: e => showHideFood(e, order._id),\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                id: order._id,\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 136\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"$\", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 161\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"total-order-price\",\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 62\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"old-orders orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-order\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-color\",\n            children: \"Old\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this), \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), myOrders.map(order => {\n          const date = new Date(order.createdAt);\n\n          if (order.status === 3) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-order-old\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status\",\n                  children: \"Status :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 53\n                }, this), \"  \", statusTab[order.status]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date-order\",\n                children: date.toLocaleDateString(\"fr\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Address : \", order.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-food\",\n                onClick: e => showHideFood(e, order._id),\n                children: \"Show/hide food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"food-list\",\n                id: order._id,\n                children: order.orderItems.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + `/images/${item.name}.png`,\n                      alt: \"\",\n                      width: \"40\",\n                      height: \"40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 40\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 136\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"$\", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 161\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"total-order-price\",\n                children: [\"Total : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-color\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 62\n                }, this), order.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MyOrders, \"6omIfoKRHpsHvvkqxpTq+KqH+9I=\");\n\n_c = MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"sources":["C:/Users/bilal/Documents/food-delivery-app/client/src/pages/myOrder/MyOrders.js"],"names":["axios","React","useEffect","useState","useContext","Navbar","LoadingSpinner","Notyf","StatusContext","Status","MyOrders","myOrders","setMyOrders","loading","setLoading","statusTab","sock","console","log","showHideFood","e","id","preventDefault","document","getElementById","classList","toggle","on","state","orders","map","order","_id","localStorage","getItem","getOrder","method","url","process","env","REACT_APP_API_URL","withCredentials","headers","then","res","data","setTimeout","catch","err","length","date","Date","createdAt","status","toLocaleDateString","address","orderItems","item","PUBLIC_URL","name","price","total"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport LoadingSpinner from '../../components/spinner/Spinner'\r\nimport { Notyf } from 'notyf';\r\nimport 'notyf/notyf.min.css';\r\nimport { StatusContext } from '../../components/context/StatusContext';\r\n\r\nimport \"./myorder.css\"\r\nimport Status from '../../components/status/Status';\r\nexport default function MyOrders() {\r\n    const [myOrders, setMyOrders] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const statusTab = [\"Waiting confirmation...\", \"cooking...\", \"On the way...\", \"Delivered\"]\r\n  \r\n    const {sock} = useContext(StatusContext)\r\n    console.log(sock);\r\n    //Permet de montrer/cacher les éléments de la commande (nourriture) lors du clique\r\n    const showHideFood = (e, id) => {\r\n        e.preventDefault()\r\n        document.getElementById(id).classList.toggle(\"show-hide\")\r\n    }\r\n    // pour status faire un composant a part avec des props\r\n    // faire un useeffect dans ce composant pour mettre à jour le status\r\n    // ou \r\n    useEffect(() => {\r\n        if(!sock){\r\n            return\r\n        }\r\n        sock.on(\"recieve-status\", (state) => {\r\n            setMyOrders((orders) => orders.map((order) => {\r\n                if(order._id === state._id){\r\n                    return state\r\n                }\r\n                return order\r\n            }) )\r\n           \r\n            \r\n           \r\n        })\r\n    }, [sock])\r\n\r\n    \r\n    useEffect(()=> {\r\n        const id = localStorage.getItem(\"userId\")\r\n        const getOrder = async()=> {\r\n            await axios({\r\n                method:\"get\",\r\n                url:`${process.env.REACT_APP_API_URL}order/`+ id ,\r\n                withCredentials: true, \r\n                headers: {\r\n                    'Access-Control-Allow-Credentials': true,\r\n                  }         \r\n            })\r\n            .then((res) => {             \r\n                console.log(res.data.data)\r\n                setMyOrders(res.data.data)\r\n                setTimeout(() => setLoading(true),500)       \r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n      getOrder()\r\n      \r\n    },[])\r\n\r\n   \r\n\r\n    if(loading === false) {\r\n        return <LoadingSpinner />\r\n    }\r\n  return (\r\n      \r\n      <div className='container'>\r\n          <Navbar />\r\n    <div className='orders-container'>\r\n        <div className=\"current-orders orders\">\r\n            <h1 className='title-order'>  <span className='span-color'>Current</span> Orders</h1>\r\n            {myOrders.length === 0 ?  (<p>You don't have any current order </p>) : ( myOrders.map((order)=> {\r\n                const date = new Date(order.createdAt)\r\n            if(order.status !==3){\r\n                return <div className='single-order'>\r\n                    <p className='status-order-current'><span className='status'>Status : </span> {statusTab[order.status]}</p>\r\n                    <p className='date-order'>{date.toLocaleDateString(\"fr\")}</p>\r\n                    <p>Address : {order.address}</p>\r\n                    <button className='show-food'  onClick={(e) => showHideFood(e, order._id)}>Show/hide food</button>\r\n                    <ul className='food-list' id={order._id}>\r\n                    \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span> <span>${item.price}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p className='total-order-price'>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        })) }\r\n      \r\n        </div>\r\n        <div className=\"old-orders orders\">\r\n        <h1 className='title-order'><span className='span-color'>Old</span> Orders</h1>\r\n        {myOrders.map((order)=> {\r\n            const date = new Date(order.createdAt)\r\n            if(order.status ===3){\r\n                return <div className='single-order'>\r\n                    <p className='status-order-old'><span className='status'>Status :</span>  {statusTab[order.status]}</p>\r\n                    <p className='date-order'>{date.toLocaleDateString(\"fr\")}</p>\r\n                    <p>Address : {order.address}</p>\r\n                    <button  className='show-food' onClick={(e) => showHideFood(e, order._id)}>Show/hide food</button>\r\n                    <ul className='food-list' id={order._id}>\r\n                        \r\n                        {order.orderItems.map((item)=> {\r\n                           return <li> <img src={process.env.PUBLIC_URL + `/images/${item.name}.png`} alt=\"\" width=\"40\" height=\"40\" /> <span>{item.name}</span> <span>${item.price}</span></li>\r\n                        })}\r\n                    </ul>\r\n                    <p className='total-order-price'>Total : <span className='span-color'>$</span>{order.total}</p>\r\n\r\n                </div>\r\n            }\r\n        })}\r\n        </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}